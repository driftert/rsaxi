use super::point::PointExtension;
use geo::Point;

/// Структура представляє трапецієподібний профіль руху, який складається з трьох етапів:
/// прискорення, постійна швидкість і уповільнення.
pub struct Trapezoid {
    pub s1: f64,        // Відстань, пройдена під час прискорення.
    pub s2: f64,        // Відстань, пройдена під час постійної швидкості.
    pub s3: f64,        // Відстань, пройдена під час уповільнення.
    pub t1: f64,        // Час прискорення.
    pub t2: f64,        // Час постійної швидкості.
    pub t3: f64,        // Час уповільнення.
    pub p1: Point<f64>, // Початкова точка руху.
    pub p2: Point<f64>, // Позиція після прискорення.
    pub p3: Point<f64>, // Позиція перед уповільненням.
    pub p4: Point<f64>, // Кінцева точка руху.
}

impl Trapezoid {
    /// Обчислює трапецієподібний профіль руху: прискорення, постійна швидкість і уповільнення.
    ///
    /// # Параметри
    /// - `s`: Загальна відстань руху.
    /// - `vi`: Початкова швидкість.
    /// - `vmax`: Максимальна швидкість (швидкість на фазі постійного руху).
    /// - `vf`: Кінцева швидкість.
    /// - `a`: Прискорення (однакове для прискорення і уповільнення).
    /// - `p1`: Початкова точка руху.
    /// - `p4`: Кінцева точка руху.
    ///
    /// # Повертає
    /// Повертає структуру `Trapezoid`, яка містить параметри трапецієподібного профілю: відстані, часи
    /// та проміжні точки руху.
    pub fn trapezoidal_profile(
        s: f64,
        vi: f64,
        vmax: f64,
        vf: f64,
        a: f64,
        p1: Point<f64>,
        p4: Point<f64>,
    ) -> Self {
        let t1 = (vmax - vi) / a;
        let s1 = (vmax + vi) / 2.0 * t1;
        let t3 = (vf - vmax) / -a;
        let s3 = (vf + vmax) / 2.0 * t3;
        let s2 = s - s1 - s3;
        let t2 = s2 / vmax;

        let p2 = p1.lerps(&p4, s1);
        let p3 = p1.lerps(&p4, s - s3);

        Self {
            s1,
            s2,
            s3,
            t1,
            t2,
            t3,
            p1,
            p2,
            p3,
            p4,
        }
    }
}
